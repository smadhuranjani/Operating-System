#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#define SHM_SIZE 1024

int main() {
    int shmid;
    key_t key = 1234; 
    if ((shmid = shmget(key, SHM_SIZE, IPC_CREAT | 0666)) < 0) {
        perror("shmget");
        exit(1);
    }
    char *shm_ptr = shmat(shmid, NULL, 0);
    if (shm_ptr == (char *)-1) {
        perror("shmat");
        exit(1);
    }
    printf("Enter data to write to shared memory: ");
    fgets(shm_ptr, SHM_SIZE, stdin);
    shmdt(shm_ptr);
    pid_t pid = fork();

    if (pid < 0) {
        perror("fork");
        exit(1);
    } else if (pid == 0) {  
        shm_ptr = shmat(shmid, NULL, 0);
        if (shm_ptr == (char *)-1) {
            perror("shmat");
            exit(1);
        }
        printf("Child process read from shared memory: %s\n", shm_ptr);

        shmdt(shm_ptr);

    } else {  
        wait(NULL);

        
        shmctl(shmid, IPC_RMID, NULL);
    }

    return 0;
}
